.. _jsonrpc-api:
    
************************
A. Описание JSON-RPC API
************************

A.1 Описание методов JSON-RPC API
---------------------------------

streams_list
++++++++++++

**Метод не соответствует стандарту JSON-RPC: в возвращаемом объекте присутствют другие поля кроме result.**

Получает список потоков.

Поля возвращаемого объекта:

- streams - список потоков.
- result - всегда равен "success".

Объекты в списке streams имеют следующие поля:

- id - номер потока;
- name - имя потока;
- enabled - true, если поток активен;
- src-index - номер текущего источника;
- autostart - true, если включен запуск потока на старте micromanager;
- timeout - время в секундах после запуска, через которое поток будет остановлен;
- stop-timestamp - время в формате UNIX-timestamp, в которое поток будет остановлен;
- src - текущий источник;
- dst - назначение;
- uptime - время непрерывной работы;
- bitrate - текущий битрейт;
- state - статус.

Возможные значение поля state:

- NOT_RUNNING;
- RUNNING;
- NO_STREAM_DATA;
- NO_PLAYLIST;
- NOT_SEGMENTING;
- UNKNOWN.

start_stream
++++++++++++

Запускает поток.

Параметры:

- id - номер потока.

Возвращает строку с результатом вызова метода. Возможные значения:

- stream started;
- bad stream id.

stop_stream
+++++++++++

Останавливает поток.

Параметры:

- id - номер потока.

Возвращает строку с результатом вызова метода. Возможные значения:

- stream stopped;
- bad stream id.

reboot_stream
+++++++++++++

Перезапускает поток.

Параметры:

- id - номер потока.

Возвращает строку с результатом вызова метода. Возможные значения:

- stream rebooted;
- bad stream id.

switch_source
+++++++++++++

Переключает источник потока.
 
Параметры:

- id - номер потока.

Возвращает строку с результатом вызова метода. Возможные значения:

- transcoding source switched;
- no more sources;
- bad stream id.

shutdown
++++++++

Завершает micromanager.
Данный метод не возвращает ничего.

statistics
++++++++++

**Метод не соответствует стандарту JSON-RPC: в возвращаемом объекте присутствют другие поля кроме result.**

Получает статистику работы micromanager. 

Поля возвращаемого объекта:

- pid - PID процесса micromanager;
- streams-count - общее количество видеопотоков;
- running-count - количество запущенных видеопотоков;
- threads-count - количество запущенных вычислительных потоков в процессе micromanager;
- mem-usage - количество ОЗУ, потребляемое процессом micromanager и процессами видеопотоков;
- cpu-usage - загрузка CPU процессом micromanager и процессами видеопотоков;
- bitrate - суммарный битрейт всех запущенных видеопотоков;
- result - всегда равен "success".


get_config
++++++++++

Запрашивает конфигурацию в виде JSON-объекта.

Коды ошибок:

- 201 - файл конфигурации не задан.
- 224 - ошибка чтения файла конфигурации.

set_config
++++++++++

Изменяет и применяет конфигурацию.

Возвращаемое значение всегда равно "ok".

Коды ошибок:

- 100 - остутствует объект params;
- 101 - пустая конфигурация;
- 109 - некорректная кофигурация;
- 220 - ошибка сохранения резервной копии текущей конфигурации;
- 221 - ошибка записи конфигурации;
- 222 - ошибка применения конфигурации;
- 223 - ошибка применения конфигурации, ошибка загрузки резервной копии.

get_asset_meta
++++++++++++++

Запрашивает подробную информацию об ассете.

Параметры:

- path - относительный путь до файла.

Возвращает список объек со следующими полями (все поля имеют строковый тип):

- size - размер файла в байтах.
- length - длина в секундах.
- bit-rate - средний битрейт.
- format-name - краткое имя контейнера или формата.
- format-long-name - полное имя контейнера или формата.
- streams - список потоков.

Объекты списка streams имеют следующие поля:

- type - тип потока.
- codec-name - краткое имя кодека.
- codec-long-name - полное имя кодека.
- language - язык.

Коды ошибок: 

- 101 - параметр path пропущен или пуст.
- 201 - ошибка получения информации.

get_asset_files
+++++++++++++++

Запрашивает список ассетов.

Параметры:

- offset - номер элемента, с которого надо начинать список.
- limit - максимальный размер списка.

Возвращает список объектов со следующими полями:

- file-name - относительный путь до ассета.

asset_delete
++++++++++++

Удаляет ассет.

Параметры:

- path - относительный путь до файла.

Возвращаемое значение всегда равно "success".

Коды ошибок:

- 101 - параметр path пропущен или пуст.
- 201 - ошибка удаления файла (см. поле message).

delete_file_from_ingest_directory
+++++++++++++++++++++++++++++++++

Удаляет файл из директории ожидания.

Параметры:

- path - относительный путь до файла.

Возвращаемое значение всегда равно "success".

Коды ошибок:

- 101 - параметр path пропущен или пуст.
- 201 - ошибка удаления файла (см. поле message).

get_ingestion_status
++++++++++++++++++++

Получает статус инжестирования. 

*Примечание: статус инжестирования обновляется раз в пять секунд.*

Возвращает список объектов со следующими полями:

- source_file_name - относительный путь до исходного файла.
- target-file-name - относительный путь до инжестированного файла.
- running - true, если процесс инжестирования активен.
- completed - true, если процесс инжестирования завершён.
- bitrate - текущий битрейт.
- fps - скорость инжестирования в кадрах.
- frame - текущий кадр.
- file-size - текуший размер инжестируемого файла в КиБ.
- src-file-size - размер исходного файла в КиБ.
- mem-used - количество оперативной памяти, используемой процессом инжестирования в КиБ.
- cpu-load - загрузка процессора процессом инжестирования.
- distribution-started - true, если процесс дистрибьюции активен.
- distribution-completed - true, если процесс дистрибьюции завершён.
- failed - true, если инжестирование или дистрибьюция завершена из-за ошибки.
- error-string - сообщение об ошибке. Если failed равно false, то содержит пустую строку.

ingest_file
+++++++++++

Инжестирует файл.

Параметры: 

- path - относительный путь до файла.
- run_cmd - шаблон команды запуска.
- naming_template - шаблон имени файла.
- preset_name - имя пресета.
- delete_after - если true, удаляет файл после успешного инжестирования и успешной дистрибьюции (если дистрибьюция включена в параметрах micromanager).

*Примечание: если указаны, и имя пресета, и шаблон команды запуска или имени файла, то парметры, заданные в пресете, имеют меньший приоритет. Также, если в выбранном пресете отсутствуют какие-либо параметры, то будут взяты значения пресета по-умолчанию.*

*Примечание 2: если значение preset_name равно default, то будет выбран пресет по-умолчанию.*

Возвращаемое значение - объект со следующими параметрами:
 
- file - относительное имя файла после инжестирования.

Коды ошибок:

- 101 - пропущен параметр path.
- 110 - не найден пресет с таким именем.
 
get_presets
+++++++++++

Запрашивает список пресетов.

Возвращает объект со следующими полями:

- default - шаблон команды запуска, используемый по умолчанию.
- default-naming-template - шаблон имени файла, используемый по умолчанию.
- default-distribution-template - шаблон команды дистрибьюции, используемый по умолчанию.
- presets - список пресетов, заданных в конфигурации.

get_waiting_files
+++++++++++++++++

Запрашивает список файлов в директории ожидания.

Параметры:

- offset - номер элемента, с которого надо начинать список.
- limit - максимальный размер списка.

Возвращает список объектов со следующими полями:

- file-name - относительное имя файла.
- target-file-name - относительное имя файла после инжестирования с шаблоном именования по умолчанию.

is_alive
++++++++

Запрашивает данные о доступности и загруженности видеосервера.

Возвращает объект со следующими полями:

- is_alive - true, если значение score не превышает максимальное, тип bool;
- score - оценка загруженности сервера, тип float.
